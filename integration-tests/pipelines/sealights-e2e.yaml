apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: sealights-instrumentation
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster.
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: "Image used to build sealights instrumentation"
      name: output-image
      default: 'quay.io/redhat-user-workloads/konflux-qe-team-tenant/go-calc-demo:sealights'
      type: string
  tasks:
    - name: test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog.git
          - name: revision
            value: sealights_build
          - name: pathInRepo
            value: common/tasks/test-metadata/0.1/test-metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: test-name
          value: $(context.pipelineRun.name)
    - name: clone-repository
      params:
        - name: enableSymlinkCheck
          value: "false"
        - name: url
          value: $(tasks.test-metadata.results.source-repo-url)
        - name: revision
          value: $(tasks.test-metadata.results.git-revision)
        - name: ociStorage
          value: $(params.output-image)-$(tasks.test-metadata.results.git-revision).git
      runAfter:
        - test-metadata
      taskRef:
        params:
          - name: name
            value: git-clone-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:4bf48d038ff12d25bdeb5ab3e98dc2271818056f454c83d7393ebbd413028147
          - name: kind
            value: task
        resolver: bundles
    - name: sealights-instrumentation
      runAfter:
        - clone-repository
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog.git
          - name: revision
            value: sealights_build
          - name: pathInRepo
            value: tasks/sealights/sealights-go/0.1/sealights-go.yaml
      params:
        - name: source-artifact
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
        - name: go-version
          value: "1.22"
        - name: sealights-secret
          value: "sealights-credentials"
        - name: component
          value: $(tasks.test-metadata.results.component-name)
        - name: branch
          value: $(tasks.test-metadata.results.source-repo-branch)
        - name: revision
          value: $(tasks.test-metadata.results.git-revision)
        - name: oci-storage
          value: $(params.output-image)-$(tasks.test-metadata.results.git-revision).git
    - name: build-sealights
      runAfter:
        - sealights-instrumentation
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog.git
          - name: revision
            value: sealights_build
          - name: pathInRepo
            value: tasks/sealights/build-sealights-container/0.1/build-sealights-container.yaml
      params:
        - name: source-artifact
          value: $(tasks.sealights-instrumentation.results.source-artifact)
        - name: revision
          value: $(tasks.test-metadata.results.git-revision)
        - name: image
          value: "$(params.output-image)-$(tasks.test-metadata.results.git-revision)"
    - name: provision-eaas-space
      runAfter:
        - build-sealights
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "4.15"
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: instanceType
                value: m5.2xlarge
              - name: version
                value: "$(steps.pick-version.results.version)"
    - name: konflux-e2e
      runAfter:
        - provision-cluster
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: {}
          - name: sealights-credentials
            secret:
              secretName: sealights-credentials
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: e2e-test
            image: quay.io/flacatus/go-test-tools:latest
            volumeMounts:
              - name: credentials
                mountPath: /credentials
              - name: sealights-credentials
                mountPath: /usr/local/sealights-credentials
            workingDir: /workspace
            env:
              - name: JOB_SPEC
                value: $(tasks.test-metadata.results.job-spec)
              - name: IMAGE
                value: $(tasks.build-sealights.results.output-image)
              - name: BUILD_SESSION_ID
                value: $(tasks.sealights-instrumentation.results.build-session-id)
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            script: |
              #!/bin/bash
              set -euo pipefail
              oc get po -A

              export SEALIGHTS_AGENT_TOKEN="$(cat /usr/local/sealights-credentials/token)"

              # Extract GIT_URL and GIT_REVISION from JOB_SPEC or use defaults
              GIT_URL="${GIT_URL:-$(echo "$JOB_SPEC" | jq -r '.git.source_repo_url')}"
              GIT_BRANCH="${GIT_URL:-$(echo "$JOB_SPEC" | jq -r '.git.source_repo_branch')}"

              cd "$(mktemp -d)"
              git clone -b k_comp https://github.com/flacatus/go-calc-demo.git .

              # Execute the upload script
              UPLOAD_SCRIPT="${PWD}/upload_it.sh"
              if [[ -x "$UPLOAD_SCRIPT" ]]; then
                echo "INFO: Running upload script: '$UPLOAD_SCRIPT'"
                /bin/bash "$UPLOAD_SCRIPT"
                echo "INFO: Upload script completed successfully."
              else
                echo "ERROR: Upload script '$UPLOAD_SCRIPT' not found or not executable."
                exit 1
              fi
